<?xml version="1.0" encoding="UTF-8"?>
<beans>
    <!--要被代理的bean（不会存入单例池，因为代理需要对象，所以需要配置）-->
    <bean id="worldService" class="com.my.test.aop.WorldServiceImpl"/>

    <!--BeanPostProcessor的实现类，会在bean实例化之前加入BeanPostProcessor池-->
    <bean class="com.my.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!--切点和通知结合体类，用户创建代理对象-->
    <bean id="pointcutAdvisor" class="com.my.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* com.my.test.aop.WorldService.explode(..))"/>
        <property name="advice" ref="methodInterceptor"/>
    </bean>


    <!--方法拦截器-->
    <bean id="methodInterceptor" class="com.my.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>


    <!--前置通知方法-->
    <bean id="beforeAdvice" class="com.my.test.aop.WorldServiceBeforeAdvice"/>

</beans>